generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String   @id @db.VarChar(255) @default(uuid())
  name                 String   @db.VarChar(255)
  cpf                  String   @db.VarChar(255) @unique
  phone                String   @db.VarChar(255)
  email                String   @db.VarChar(255) @unique
  password             String   @db.VarChar(255)
  role                 Role     @default(USER)
  refreshToken         String?  @db.VarChar(255) @unique
  code                 String?  @db.VarChar(255)
  resetPasswordExpires String?  @db.VarChar(255)
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  admin                Campaign[]
  users                UsersOnCampaigns[]
}

model Campaign {
  id        String   @id @db.VarChar(255) @default(uuid())
  title     String   @db.VarChar(255)
  admin     User?    @relation(fields: [adminId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  adminId   String?  @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  files     FilesOnCampaigns[]
  users     UsersOnCampaigns[]
}

model FilesOnCampaigns {
  id         String   @id @db.VarChar(255) @default(uuid())
  campaign   Campaign @relation(fields: [campaignId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  campaignId String   @db.VarChar(255)
  file       File     @relation(fields: [fileId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  fileId     String   @db.VarChar(255)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model File {
  id        String   @id @db.VarChar(255) @default(uuid())
  url       String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  campaigns FilesOnCampaigns[]
}

model UsersOnCampaigns {
  id         String   @id @db.VarChar(255) @default(uuid())
  campaign   Campaign @relation(fields: [campaignId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  campaignId String   @db.VarChar(255)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId     String   @db.VarChar(255)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
  SUPERUSER
}
